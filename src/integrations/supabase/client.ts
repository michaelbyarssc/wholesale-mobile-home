// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vgdreuwmisludqxphsph.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZnZHJldXdtaXNsdWRxeHBoc3BoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA3MDk2OTgsImV4cCI6MjA2NjI4NTY5OH0.gnJ83GgBWV4tb-cwWJXY0pPG2bGAyTK3T2IojP4llR8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  global: {
    fetch: (input: RequestInfo, init?: RequestInit) => {
      try {
        const headers = new Headers(init?.headers || {});
        // Inject chat/session security headers dynamically if present
        if (typeof sessionStorage !== 'undefined') {
          const chatToken = sessionStorage.getItem('chat_session_token');
          const csrfToken = sessionStorage.getItem('csrf_token');
          if (chatToken) headers.set('x-chat-token', chatToken);
          if (csrfToken) headers.set('x-csrf-token', csrfToken);
        }
        return fetch(input, { ...init, headers });
      } catch {
        return fetch(input, init as any);
      }
    }
  }
});